openapi: 3.0.3
info:
  title: Zappit API tutorial
  version: 1.0.0
  description: Simple API
paths:
  /api/info/:
    get:
      operationId: api_info_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/posts/:
    get:
      operationId: api_posts_list
      description: Post list API view
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
          description: ''
    post:
      operationId: api_posts_create
      description: Post list API view
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
  /api/posts/{id}/:
    get:
      operationId: api_posts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDetail'
          description: ''
    put:
      operationId: api_posts_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostDetail'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDetail'
          description: ''
    patch:
      operationId: api_posts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPostDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPostDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPostDetail'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDetail'
          description: ''
    delete:
      operationId: api_posts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/posts/{id}/vote/:
    post:
      operationId: api_posts_vote_create
      description: Vote create API view
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Vote'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vote'
          description: ''
    delete:
      operationId: api_posts_vote_destroy
      description: Vote create API view
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /nested/:
    get:
      operationId: nested_list
      tags:
      - nested
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserSecond'
          description: ''
components:
  schemas:
    Nested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        voter:
          type: integer
        post:
          type: integer
      required:
      - id
      - post
      - voter
    PatchedPostDetail:
      type: object
      description: Post detail model serializer
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        url:
          type: string
          format: uri
          maxLength: 200
        poster:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        poster_id:
          type: integer
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        vote_post:
          type: array
          items:
            $ref: '#/components/schemas/Nested'
          readOnly: true
    Post:
      type: object
      description: Post model serializer
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        url:
          type: string
          format: uri
          maxLength: 200
        poster:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        poster_id:
          type: integer
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        votes:
          type: integer
          readOnly: true
      required:
      - created
      - id
      - poster
      - poster_id
      - title
      - url
      - votes
    PostDetail:
      type: object
      description: Post detail model serializer
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        url:
          type: string
          format: uri
          maxLength: 200
        poster:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        poster_id:
          type: integer
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        vote_post:
          type: array
          items:
            $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - created
      - id
      - poster
      - poster_id
      - title
      - url
      - vote_post
    UserSecond:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        author_comment:
          type: array
          items:
            $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - author_comment
      - id
      - username
    Vote:
      type: object
      description: Vote model serializer
      properties:
        id:
          type: integer
          readOnly: true
      required:
      - id
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
